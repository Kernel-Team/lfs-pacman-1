--- a/configure.in	2020-11-30 01:03:51.000000000 +0100
+++ b/configure.in	2021-01-02 20:47:01.215554060 +0100
@@ -604,7 +604,7 @@
 
 if test "$class_driver" = "no" && test "$hpijs_only_build" = "no" && test "$hpcups_only_build" = "no"; then
    AC_CHECK_LIB([cups], [cupsDoFileRequest], [LIBS="$LIBS"], [AC_MSG_ERROR([cannot find libcups support], 9)])
-   AC_CHECK_HEADERS(cups/cups.h, ,[AC_MSG_ERROR([cannot find cups-devel support], 3)])
+   AC_CHECK_HEADERS(cups/cups.h cups/ppd.h, ,[AC_MSG_ERROR([cannot find cups-devel support], 3)])
    if test "$libusb01_build" = "yes"; then
       AC_CHECK_LIB([usb], [usb_init], [LIBS="$LIBS"], [AC_MSG_ERROR([cannot find libusb support], 2)])
       AC_CHECK_HEADERS(usb.h, ,[AC_MSG_ERROR([cannot find libusb-devel support], 11)])
@@ -614,17 +614,29 @@
    fi
 fi
 
-SAVE_CPPFLAGS="$CPPFLAGS"
-CFLAGS=`python-config --includes`
-if [ $? -eq 0 ] 
-then
-   echo $FLAGS
-else
-CFLAGS=`python3-config --includes`
-   if [ $? -eq 0 ]
-   then
-   echo $FLAGS
-   fi
+AC_PATH_PROG(python3_config_path, python3-config, [AC_MSG_ERROR([python3-config not installed], 6)])
+
+PYTHON_INCLUDES=`$python3_config_path --includes`
+if test "X$PYTHON_INCLUDES" = "X" ; then
+  AC_MSG_ERROR([Cannot get Python includes via python3-config], 6)
+fi
+
+PYTHON_LIBS=`$python3_config_path --libs`
+if test "X$PYTHON_LIBS" = "X" ; then
+  AC_MSG_ERROR([Cannot get Python libs via python3-config], 6)
+fi
+
+SAVE_CFLAGS=$CFLAGS
+SAVE_LIBS=$LIBS
+
+CFLAGS="$CFLAGS $PYTHON_INCLUDES"
+LIBS="$LIBS $PYTHON_LIBS"
+
+AC_TRY_LINK(,[ ], AC_MSG_RESULT(yes); python_includes="ok", AC_MSG_ERROR([no: PYTHON DISABLED], 6))
+
+if test "X$python_includes" != "Xok" ; then
+  CFLAGS="$SAVE_CFLAGS"
+  LIBS="$SAVE_LIBS"
 fi
 
 #CFLAGS=`(python-config --includes)`
@@ -641,7 +653,6 @@
    AS_IF([test "x$FOUND_HEADER" != "xyes"],
           [AC_MSG_ERROR([cannot find python-devel support], 6)])
 fi
-CFLAGS="$save_CFLAGS"
 
 if test "$hpijs_only_build" = "no" && test "$scan_build" = "yes" && test "$hpcups_only_build" = "no"; then
    AC_CHECK_LIB([sane], [sane_open], [LIBS="$LIBS"], [AC_MSG_ERROR([cannot find sane-backends-devel support (or --disable-scan-build)], 12)])
--- a/copier/copier.py	2020-11-30 01:03:51.000000000 +0100
+++ b/copier/copier.py	2021-01-02 20:47:14.215581369 +0100
@@ -73,13 +73,13 @@
 
     def isCopyActive(self):
         if self.copy_thread is not None:
-            return self.copy_thread.isAlive()
+            return self.copy_thread.is_alive()
         else:
             return False
 
     def waitForCopyThread(self):
         if self.copy_thread is not None and \
-            self.copy_thread.isAlive():
+            self.copy_thread.is_alive():
 
             self.copy_thread.join()
 
--- a/fax/fax.py	2020-11-30 01:03:51.000000000 +0100
+++ b/fax/fax.py	2021-01-02 20:47:14.215581369 +0100
@@ -478,13 +478,13 @@
 
     def isSendFaxActive(self):
         if self.send_fax_thread is not None:
-            return self.send_fax_thread.isAlive()
+            return self.send_fax_thread.is_alive()
         else:
             return False
 
     def waitForSendFaxThread(self):
         if self.send_fax_thread is not None and \
-            self.send_fax_thread.isAlive():
+            self.send_fax_thread.is_alive():
 
             try:
                 self.send_fax_thread.join()
--- a/fax/pmlfax.py	2020-11-30 01:03:52.000000000 +0100
+++ b/fax/pmlfax.py	2021-01-02 20:47:14.215581369 +0100
@@ -179,13 +179,13 @@
 
     def isUploadLogActive(self):
         if self.upload_log_thread is not None:
-            return self.upload_log_thread.isAlive()
+            return self.upload_log_thread.is_alive()
         else:
             return False
 
     def waitForUploadLogThread(self):
         if self.upload_log_thread is not None and \
-            self.upload_log_thread.isAlive():
+            self.upload_log_thread.is_alive():
 
             self.upload_log_thread.join()
 
--- a/pcard/pcardext/pcardext.c	2020-11-30 01:03:52.000000000 +0100
+++ b/pcard/pcardext/pcardext.c	2021-01-02 20:47:26.595607331 +0100
@@ -20,7 +20,7 @@
 Requires:
 Python 2.2+
 
-Author: Don Welch
+Author: Don Welch 
 
 \*****************************************************************************/
 
@@ -38,9 +38,37 @@
 
 int verbose=0;
 
+#if PY_MAJOR_VERSION >= 3
+  #define MOD_ERROR_VAL NULL
+  #define MOD_SUCCESS_VAL(val) val
+  #define MOD_INIT(name) PyMODINIT_FUNC PyInit_##name(void)
+  #define PyInt_AS_LONG PyLong_AS_LONG
+  #define MOD_DEF(ob, name, doc, methods) \
+          static struct PyModuleDef moduledef = { \
+            PyModuleDef_HEAD_INIT, name, doc, -1, methods, }; \
+          ob = PyModule_Create(&moduledef);
+
+
+  #define PY_String_Bytes  PyBytes_FromStringAndSize
+  #define PY_AsString_Bytes  PyBytes_AsStringAndSize
+
+#else
+  #define MOD_ERROR_VAL
+  #define MOD_SUCCESS_VAL(val)
+  #define MOD_INIT(name) void init##name(void)
+  #define MOD_DEF(ob, name, doc, methods)         \
+        ob = Py_InitModule3(name, methods, doc);
+
+  #define PY_String_Bytes PyString_FromStringAndSize
+  #define PY_AsString_Bytes PyString_AsStringAndSize
+  
+#endif
+
 PyObject * readsectorFunc = NULL;
 PyObject * writesectorFunc = NULL;
 
+
+
 int ReadSector(int sector, int nsector, void *buf, int size)
 {
     PyObject * result;
@@ -56,9 +84,13 @@
         if( result )
         {
             Py_ssize_t len = 0;
-            PyString_AsStringAndSize( result, &result_str, &len );
+
+            //PyString_AsStringAndSize( result, &result_str, &len );    
+            //PyBytes_AsStringAndSize( result, &result_str, &len ); 
+            PY_AsString_Bytes( result, &result_str, &len );
             
-            if( len < nsector*FAT_HARDSECT )
+
+	    if( len < nsector*FAT_HARDSECT )
             {
                 goto abort;
             }
@@ -205,7 +237,9 @@
     
     if( FatReadFileExt( name, offset, len, buffer ) == len )
     {
-        return PyString_FromStringAndSize( (char *)buffer, len );
+        // return PyString_FromStringAndSize( (char *)buffer, len );
+        return PY_String_Bytes( (char *)buffer, len );
+        // return PyBytes_FromStringAndSize( (char *)buffer, len );
     }
     else
     {
@@ -233,14 +267,15 @@
 
 static char pcardext_documentation[] = "Python extension for HP photocard services";
 
-void initpcardext( void )
-{
-    PyObject * mod = Py_InitModule4( "pcardext", pcardext_methods, 
-                                     pcardext_documentation, (PyObject*)NULL, 
-                                     PYTHON_API_VERSION );
-                     
-    if (mod == NULL)
-      return;
+MOD_INIT(pcardext)  {
+
+  PyObject* mod ;
+  MOD_DEF(mod, "pcardext", pcardext_documentation, pcardext_methods);
+  if (mod == NULL)
+    return MOD_ERROR_VAL;
+
+  return MOD_SUCCESS_VAL(mod);
+
 }
 
 
--- a/pcard/photocard.py	2020-11-30 01:03:52.000000000 +0100
+++ b/pcard/photocard.py	2021-01-02 20:47:26.595607331 +0100
@@ -30,7 +30,7 @@
 from base import device, utils, exif
 
 try:
-    from . import pcardext
+    import pcardext
 except ImportError:
     if not os.getenv("HPLIP_BUILD"):
         log.error("PCARDEXT could not be loaded. Please check HPLIP installation.")
--- a/prnt/hpcups/HPCupsFilter.h	2020-11-30 01:03:52.000000000 +0100
+++ b/prnt/hpcups/HPCupsFilter.h	2021-01-02 20:46:23.685475013 +0100
@@ -38,6 +38,8 @@
 #include <cups/ppd.h>
 #include "dbuscomm.h"
 
+#include <cups/ppd.h>
+
 #define		DBITMAPFILEHEADER		14
 #define		DBITMAPINFOHEADER		40
 
--- a/prnt/hpijs/hpcupsfax.cpp	2020-11-30 01:03:52.000000000 +0100
+++ b/prnt/hpijs/hpcupsfax.cpp	2021-01-02 20:46:23.685475013 +0100
@@ -43,6 +43,7 @@
 #include <arpa/inet.h>
 #include <math.h>
 #include <cups/cups.h>
+#include <cups/ppd.h>
 #include <cups/raster.h>
 #include <string>
 #ifdef FALSE
--- a/scan/sane.py	2020-11-30 01:03:52.000000000 +0100
+++ b/scan/sane.py	2021-01-02 20:47:14.215581369 +0100
@@ -378,14 +378,14 @@
 
     def isScanActive(self):
         if self.scan_thread is not None:
-            return self.scan_thread.isAlive() and self.scan_thread.scan_active
+            return self.scan_thread.is_alive() and self.scan_thread.scan_active
         else:
             return False
 
 
     def waitForScanDone(self):
         if self.scan_thread is not None and \
-            self.scan_thread.isAlive() and \
+            self.scan_thread.is_alive() and \
             self.scan_thread.scan_active:
 
             try:
@@ -398,9 +398,9 @@
         #time.sleep(0.5)
         if self.scan_thread is not None:
             while True:
-                #print self.scan_thread.isAlive()
+                #print self.scan_thread.is_alive()
                 #print self.scan_thread.scan_active
-                if self.scan_thread.isAlive() and \
+                if self.scan_thread.is_alive() and \
                     self.scan_thread.scan_active:
                     return
 
--- a/unload.py	2020-11-30 01:03:52.000000000 +0100
+++ b/unload.py	2021-01-02 20:47:26.595607331 +0100
@@ -44,6 +44,11 @@
 
 # Local
 from base.g import *
+from base.sixext import PY3
+if PY3:
+    log.error("This functionality is not spported in python3 environment.")
+    sys.exit(1)
+
 from base import device, utils, tui, module
 from prnt import cups
 

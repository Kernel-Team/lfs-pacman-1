pkgbase=vulkan-loader
pkgname=('vulkan-loader' 'lib32-vulkan-loader')
pkgver=1.2.165
pkgrel=1
arch=('x86_64')
url="https://www.khronos.org/vulkan/"
license=('custom')
#depends=()
options=(emptydirs)
source=("https://github.com/KhronosGroup/Vulkan-Loader/archive/v${pkgver}/Vulkan-Loader-${pkgver}.tar.gz")

export CC="gcc"
export CXX="g++"

prepare() {
	install -v -dm755 "${srcdir}"/build{32,64}
}

build() {
	local _flags=(-DCMAKE_INSTALL_PREFIX=/usr
		-DCMAKE_BUILD_TYPE=Release
		-DCMAKE_INSTALL_SYSCONFDIR=/etc
		-DCMAKE_INSTALL_DATADIR=share
		-DVULKAN_HEADERS_INSTALL_DIR=/usr
		-DCMAKE_SKIP_RPATH=ON
		-DBUILD_TESTS=OFF
		-DBUILD_WSI_XCB_SUPPORT=ON
		-DBUILD_WSI_XLIB_SUPPORT=ON
		-DBUILD_WSI_WAYLAND_SUPPORT=ON)

	cd "${srcdir}/build64"

	cmake "${srcdir}/Vulkan-Loader-${pkgver}" \
		-DCMAKE_INSTALL_LIBDIR=lib \
		${_flags[@]}

	cd "${srcdir}/build32"

	export ASFLAGS="--32"
	export CFLAGS="${CFLAGS} -m32"
	export CXXFLAGS="${CXXFLAGS} -m32"
	export PKG_CONFIG_PATH=/usr/lib32/pkgconfig

	cmake "${srcdir}/Vulkan-Loader-${pkgver}" \
		-DCMAKE_INSTALL_LIBDIR=lib32 \
		${_flags[@]}

	export CC="${CC_HOLD}" CXX="${CXX_HOLD}"
	unset ASFLAGS CC_HOLD CXX_HOLD PKG_CONFIG_PATH

	make -C "${srcdir}/build64"
	make -C "${srcdir}/build32"
}

package_vulkan-loader() {
	pkgdesc="Vulkan Installable Client Driver (ICD) Loader"

	cd "${srcdir}/build64"

	make install DESTDIR="${pkgdir}"
}

package_lib32-vulkan-loader() {
	pkgdesc="Vulkan Installable Client Driver (ICD) Loader (32 bit)"

	cd "${srcdir}/build32"

	make install DESTDIR="${pkgdir}"
}

sha512sums=('0381a7d3ba737c85caa79da1103b8a9d8321d9e55880cc3da94bb6d5c14bc1022f91831b2eedc931a18558b2276193989196d355005bb3d8e2ccdaf384e233e5')
